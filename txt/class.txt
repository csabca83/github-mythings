class Cool: -a classokat nagybetuvel irjuk hogy konyyeben lehessen olvasni!
	pass -atugrik rajta ezaltal nem okozunk hibat hogyha a classba nem irunk bele semmit!

facade_1=Facade()-instancet a classot,olyan mintha hivnank

print(type(facade_1))
<class '__main__.Facade'>-a main azt jelenti hogy ezt a filet futassuk!


class Grade:-class megnevezes
  minimum_passing=65-class variable(object)
  szoj=30-class variable(object)
number1=Grade()-a number1 a classbol fog dolgozni
number2=Grade()-a number2 a classbol fog dolgozni
print(number1.minimum_passing/number2.szoj)-a class variablek vannak belementve!!!
 
def washing_brushes(self):  ==method!


class Circle:
  pi = 3.14
  
  def area(self, radius): -a self az a object,az mindenkeppen kell a methodba,mert annelkul nem tudjuk ki hivni 
    return Circle.pi * radius ** 2 -igy vesszuk ki az objectbol az erteket!
  
circle = Circle()
pizza_area = circle.area(12 / 2)
teaching_table_area = circle.area(36 / 2)
round_room_area = circle.area(11460 / 2)-igy hivjuk a defet


class Dog():
	"""A simple attempt to model a dog."""
	def __init__(self, name, age):-ezaltal tudunk attribute irni a classba
		"""Initialize name and age attributes."""
		self.name = name-ezek altal tudunk a methodon kivul dolgozni vele!!!
		self.age = age
	def sit(self):
		"""Simulate a dog sitting in response to a command."""
		print(self.name.title() + " is now sitting.")
	def roll_over(self):
		"""Simulate rolling over in response to a command."""
		print(self.name.title() + " rolled over!")
my_dog = Dog('willie', 6)
print("My dog's name is " + my_dog.name.title() + ".")
print("My dog is " + str(my_dog.age) + " years old.")


print(my_dog.name)-igy tudjuk kiiratni
my_dog.sit()-igy calloljuk a modult
a classt ugy kell elkepzelni mint egy importot